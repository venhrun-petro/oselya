"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ink = require("ink");

var _react2 = require("@xstate/react");

var _xstate = require("xstate");

var _jsxFileName = "/Users/kylemathews/programs/gatsby/packages/gatsby-cli/src/reporter/reporters/ink/develop.js";

const open = require(`open`);

const toggleMachine = (0, _xstate.Machine)({
  id: `cli`,
  initial: `idle`,
  on: {
    RETURN_TO_IDLE: `idle`
  },
  states: {
    idle: {
      id: `idle`,
      states: {},
      on: {
        KEYPRESS_o: `OpeningLink`,
        r: `#Restart`
      }
    },
    OpeningLink: {
      states: {},
      on: {
        KEYPRESS_s: {
          target: `idle`,
          actions: `openLink`
        }
      }
    },
    Restart: {
      id: `Restart`,
      states: {},
      on: {
        no: `#idle`,
        yes: `#Restarting`
      }
    },
    Restarting: {
      id: `Restarting`,
      states: {}
    }
  },
  actions: {
    openLink: (context, event) => {
      open(`http://localhost:8001`);
    }
  }
});

const useKeyHandler = keyHandler => {
  const {
    stdin,
    setRawMode
  } = (0, _react.useContext)(_ink.StdinContext);
  (0, _react.useEffect)(() => {
    setRawMode(true);
    stdin.on(`data`, keyHandler);
    return () => {
      stdin.off(`data`, keyHandler);
      setRawMode(false);
    };
  }, [stdin, setRawMode]);
};

const useTerminalResize = () => {
  const {
    stdout
  } = (0, _react.useContext)(_ink.StdoutContext);
  const [sizes, setSizes] = (0, _react.useState)([stdout.columns, stdout.rows]);
  (0, _react.useEffect)(() => {
    stdout.on(`resize`, () => {
      setSizes([stdout.columns, stdout.rows]);
    });
    return () => {
      stdout.off(`resize`);
    };
  }, [stdout]);
  return sizes;
};

const Header = ({
  children
}) => _react.default.createElement(_ink.Box, {
  __source: {
    fileName: _jsxFileName,
    lineNumber: 74
  },
  __self: void 0
}, _react.default.createElement(_ink.Color, {
  bgBlue: true,
  black: true,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 75
  },
  __self: void 0
}, children));

const Error = ({
  children
}) => _react.default.createElement(_ink.Color, {
  bgRed: true,
  black: true,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 82
  },
  __self: void 0
}, children);

const Warning = ({
  children
}) => _react.default.createElement(_ink.Color, {
  bgYellow: true,
  black: true,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 87
  },
  __self: void 0
}, children);

const Develop = props => {
  const [current, send] = (0, _react2.useMachine)(toggleMachine); // Run any actions

  current.actions.forEach(action => {
    if (action.type === `openLink`) {
      open(`http://localhost:8001`);
    } // service.actions[action.type](current.context, current.event)

  });
  const [lastKey, setKey] = (0, _react.useState)(``);
  useKeyHandler(keypress => {
    // Work around xstate's lack of catch all
    if (current.value === `OpeningLink` && keypress !== `s`) {
      send(`RETURN_TO_IDLE`);
    } else {
      send(`KEYPRESS_${keypress}`);
    }

    setKey(keypress);
  });
  const [width, height] = useTerminalResize();
  return _react.default.createElement(_ink.Box, {
    flexDirection: "column",
    marginTop: 1,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116
    },
    __self: void 0
  }, _react.default.createElement(_ink.Box, {
    flexDirection: "row",
    justifyContent: "space-between",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117
    },
    __self: void 0
  }, _react.default.createElement(_ink.Box, {
    flex: 2,
    flexDirection: "column",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 118
    },
    __self: void 0
  }, _react.default.createElement(Error, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 119
    },
    __self: void 0
  }, "errors"), _react.default.createElement(Warning, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 120
    },
    __self: void 0
  }, "warnings"), _react.default.createElement(_ink.Box, {
    flex: 1,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 121
    },
    __self: void 0
  }, "width: ", width, ", height: ", height), _react.default.createElement(_ink.Box, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 124
    },
    __self: void 0
  }, "Last key (", lastKey, ")"), _react.default.createElement(_ink.Box, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 125
    },
    __self: void 0
  }, "Toggle: ", JSON.stringify(current.value, null, 4))), _react.default.createElement(_ink.Box, {
    flex: 1,
    flexDirection: "column",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 127
    },
    __self: void 0
  }, _react.default.createElement(Header, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 128
    },
    __self: void 0
  }, "Links"), _react.default.createElement(_ink.Box, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 129
    },
    __self: void 0
  }, "https://localhost:8000"), _react.default.createElement(_ink.Box, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 130
    },
    __self: void 0
  }, "https://localhost:8000/___graphql"), _react.default.createElement(_ink.Box, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 131
    },
    __self: void 0
  }, ` `), _react.default.createElement(Header, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132
    },
    __self: void 0
  }, "Commands"), _react.default.createElement(_ink.Box, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 133
    },
    __self: void 0
  }, "[r] restart \"gatsby develop\" process"), _react.default.createElement(_ink.Box, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 134
    },
    __self: void 0
  }, "[o] open links"), _react.default.createElement(_ink.Box, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 135
    },
    __self: void 0
  }, "[s] shadow theme components"))), _react.default.createElement(_ink.Box, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 138
    },
    __self: void 0
  }, ` `), _react.default.createElement(_ink.Box, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 139
    },
    __self: void 0
  }, ` `), _react.default.createElement(_ink.Box, {
    textWrap: `truncate`,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 140
    },
    __self: void 0
  }, `â€”`.repeat(width)), _react.default.createElement(_ink.Box, {
    height: 1,
    flexDirection: "row",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 141
    },
    __self: void 0
  }, _react.default.createElement(_ink.Color, {
    bgGreen: true,
    black: true,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 142
    },
    __self: void 0
  }, "RESTART NEEDED [r]"), ` | `, _react.default.createElement(Error, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 146
    },
    __self: void 0
  }, "1 error"), ` | `, _react.default.createElement(Warning, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148
    },
    __self: void 0
  }, "2 warnings"), ` | `, _react.default.createElement(_ink.Color, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150
    },
    __self: void 0
  }, "117 pages"), _react.default.createElement(_ink.Box, {
    flexGrow: 1,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151
    },
    __self: void 0
  }), _react.default.createElement(_ink.Color, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152
    },
    __self: void 0
  }, "Kyle's cool blog")));
};

var _default = Develop;
exports.default = _default;